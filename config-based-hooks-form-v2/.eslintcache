[{"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\index.js":"1","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\App.js":"2","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderCard.js":"4","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js":"5","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js":"6","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Form.js":"7","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderForm.js":"8","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\DatePicker.js":"9","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Controls.js":"10","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Input.js":"11","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Checkbox.js":"12","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\DatePicker.js":"13","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\ProductCarousel.js":"14","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\CountrySelect.js":"15","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Asynchronous.js":"16","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\geolocation\\useGeoLocation.js":"17","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Suggestion.js":"18"},{"size":500,"mtime":1610070274000,"results":"19","hashOfConfig":"20"},{"size":1051,"mtime":1611139778052,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610070274000,"results":"22","hashOfConfig":"20"},{"size":3915,"mtime":1611293310187,"results":"23","hashOfConfig":"20"},{"size":7869,"mtime":1611246123185,"results":"24","hashOfConfig":"20"},{"size":6790,"mtime":1611231572471,"results":"25","hashOfConfig":"20"},{"size":2835,"mtime":1610965728811,"results":"26","hashOfConfig":"20"},{"size":5693,"mtime":1610954252419,"results":"27","hashOfConfig":"20"},{"size":756,"mtime":1610208077130,"results":"28","hashOfConfig":"20"},{"size":323,"mtime":1610306059279,"results":"29","hashOfConfig":"20"},{"size":673,"mtime":1610372242151,"results":"30","hashOfConfig":"20"},{"size":755,"mtime":1610209525524,"results":"31","hashOfConfig":"20"},{"size":1025,"mtime":1610951158476,"results":"32","hashOfConfig":"20"},{"size":1489,"mtime":1610303656960,"results":"33","hashOfConfig":"20"},{"size":15459,"mtime":1610338818293,"results":"34","hashOfConfig":"20"},{"size":2184,"mtime":1610306430689,"results":"35","hashOfConfig":"20"},{"size":1002,"mtime":1611035177945,"results":"36","hashOfConfig":"20"},{"size":4239,"mtime":1611243141649,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"a4lc17",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\index.js",[],["84","85"],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\App.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderCard.js",["86","87","88"],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderQuote.js",["89","90","91","92","93"],"import { Button, Grid } from '@material-ui/core'\nimport React, {useState} from 'react'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles} from '@material-ui/core/styles';\nimport { useHistory } from \"react-router\";\nimport StripeCheckout from 'react-stripe-checkout';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Geocode from \"react-geocode\";\n//import Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport SuccessfulPayment from './Suggestion'\n\nimport axios from 'axios'\nimport './RenderQuote.css'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst useStyles = makeStyles(() => ({\n    root: {\n      display: 'flex',\n    },\n        \n  }));\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\nfunction RenderQuote({locationData}) {\n\n    const [open, setOpen] = React.useState(false);\n    const [openDialog, setOpenDialog] = React.useState(false);\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n      };\n      const handleCloseDialog = () => {\n       \n    \n        setOpenDialog(false);\n      };\n      const history = useHistory();\n      function handleMore(){\n        history.push(\"/\")\n      }\n    const classes = useStyles();\n    const quoteResponse = JSON.parse(locationData.location.state.quoteData)\n    console.log(\"QUOTE RESPONSE>>>\",quoteResponse)\n    const quoteData = quoteResponse.quoteData\n    var paymentPartner, paymentProduct, paymentCategory, amountPayed\n    \n    console.log(\"QUOTE DATA IN RENDERQ\",quoteData)\n\n    const Capitalize = (str)=>{\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n    async function handleToken (token, addresses) {\n        //Have to send the product also to the backend {token, product}\n        console.log({token:token, address: addresses, partner: paymentPartner, product:paymentProduct, category: paymentCategory, amount: amountPayed, userLocation: quoteResponse.userLocation})\n        //const [data]=React.useState({address: addresses, partner: paymentPartner, product:paymentProduct, category: paymentCategory, amount: amountPayed, userLocation: quoteResponse.userLocation})\n        const data={ token:token, address: addresses, partner: paymentPartner, product:paymentProduct, category: paymentCategory, amount: amountPayed, userLocation: quoteResponse.userLocation}\n        \n         const response=  await axios.post(\"http://localhost:9090/api/charge\", {data}  )\n        // .then(response=>{\n        //     console.log(\"RESPONSE\", response.data);\n\n        // }).catch(err=>{\n        //     console.log(\"ERROR\", err);\n        // })\n         \n        const { status } = response.data;\n    console.log(\"Response:\", response.data);\n    if (status === \"succeeded\") {\n        setOpen(true)\n        setOpenDialog(true)\n      console.log(\"Success! Check email for details\");\n      //history.push('/quote/success')\n    } else {\n      console.log(\"Something went wrong\");\n      // history.push('/quote/error')\n    }\n        \n\n    }\n    \n    const handlePaymentData=(partner,product,category, premium)=>{\n        paymentPartner=partner\n        paymentProduct=product\n        paymentCategory=category\n        amountPayed=premium\n    }\n    const stripePayment = (partner, premium) => {\n        console.log(\"PREMIUM>>>\",premium)\n        \n        return <StripeCheckout\n            stripeKey={process.env.REACT_APP_STRIPE_KEY}\n            currency=\"INR\"\n            //image=\"logo.png\"\n            description={`${quoteResponse.product} By ${partner}`}\n            token={handleToken}\n            amount={premium*100}            \n            name=\"InsuranceBzr\"\n            billingAddress\n            shippingAddress>\n                <Button className=\"stripebutton\" onClick={()=>handlePaymentData(partner,quoteResponse.product,quoteResponse.category, premium)} style={{height:'20%', display:'flex', alignContent:'center', margin: 'auto', marginLeft: '65px', marginTop: '65px', borderRadius: '15px', backgroundColor: 'orange'}}  >Buy Now</Button>\n            </StripeCheckout>\n            \n    }\n    const renderQuote = (quote) => {\n        let quotes=[]\n        for(let key in quote){\n            if(quote[key] !== \"\"){\n                quotes.push(<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{Capitalize(key)}: {quote[key]}</Typography>)\n            }\n            \n\n            \n        }\n        return quotes\n    }\n\n    const renderPartner = (partner, index) => {\n        return (\n            <Grid item xs={12} sm={12}>\n                <Card className=\"card\" key={index} style={{maxWidth: 700, margin: 'auto', marginTop: 20}} className={classes.root}>    \n                    <CardMedia image={partner.image} style={{width: 250}}/>\n                    <div className={classes.details}>\n                    <CardContent className={classes.content}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {partner.partner}\n                        </Typography>\n                        <Divider/>\n                        <br></br>\n                        {(typeof (partner.quote) === 'object') && <>{renderQuote(partner.quote)}</>}\n                        \n\n                         {/* {renderQuote(partner)} */}\n                    </CardContent>\n                    </div>\n                    {stripePayment(partner.partner, partner.quote.premium)}\n                    {/* <Button style={{height:'50%', margin: 'auto', marginTop: '65px', borderRadius: '15px', backgroundColor: 'orange'}}  onClick={() => stripePayment(partner.partner, partner.premium)}>Buy Now</Button> */}\n                </Card>\n            </Grid>\n        )\n\n    }\n    \n\n    return (\n        <div>\n            <Grid container>\n                {quoteData.map(renderPartner)}\n            </Grid>\n            <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n        Success! Check email for details\n        </Alert>\n      </Snackbar>\n      <div>\n      \n      <Dialog\n        open={openDialog}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleCloseDialog}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle style={{textAlign:\"center\"}}id=\"alert-dialog-slide-title\">{\"Your Payment of was successful\"}</DialogTitle>\n        <DialogContent>\n        \n        <img style={{marginLeft:\"12%\"}}src=\"https://i.pinimg.com/originals/0d/e4/1a/0de41a3c5953fba1755ebd416ec109dd.gif\"/>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Receipt has been sent to your email address. Thank you for choosing us!\n            \n          </DialogContentText>\n        </DialogContent>\n        \n        <DialogActions>\n        <Button onClick={handleMore} color=\"primary\">\n        Check out more Insurances\n          </Button>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n\n        </div>\n    )\n}\n\nexport default RenderQuote\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\MiniDrawer.js",["94","95","96","97","98","99","100","101","102","103","104"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AssessmentIcon from '@material-ui/icons/Assessment';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport LoyaltyIcon from '@material-ui/icons/Loyalty';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { useHistory } from \"react-router\";\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\n import useGeoLocation from '../geolocation/useGeoLocation'\n import \"./MiniDrawer.css\"\nimport { Button } from '@material-ui/core';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  footer: {\n    width: 800,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n      alignItems: 'center',\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function MiniDrawer({RenderComponent, location}) {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const history = useHistory();\n   const geoLocation= useGeoLocation();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const itemsList = [\n    {\n      text: \"Home\",\n      icon: <HomeIcon/>,\n      onClick: () => history.push(\"/\")\n    },\n    {\n      text: \"Services\",\n      icon: <BusinessIcon/>,\n      subMenu: [{\n        text: \"\",\n      icon: <BusinessIcon/>,\n      text: \"Services\",\n      icon: <BusinessIcon/>,\n      }]\n    },\n    {\n      text: \"Partners\",\n      icon: <LoyaltyIcon/>\n    },\n    {\n      text: \"Products\",\n      icon: <ShoppingBasketIcon/>,\n      onClick: () => history.push(\"/products\")\n    },\n    {\n      text: \"About Us\",\n      icon: <InfoIcon/>\n    }\n  ]\n\n  const locationData = location\n\n  // const useStyles = makeStyles({\n  //   ,\n  // });\n  const classesFooter = useStyles();\n  const [value, setValue] = React.useState(0);\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n        style={{ background: \"gold\" }}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h4\" noWrap style={{cursor: 'pointer', fontFamily: 'Righteous, cursive',color: 'white', alignItems: 'center'}} onClick={() => history.push(\"/\")} >\n            {/* <img style={{width: \"35px\", height:\"35px\" }} src=\"https://www.freeiconspng.com/uploads/insurance-icon-10.png\"/> */}\n            <Button style={{borderRadius:\"99999999px\", backgroundColor:\"#d1a515\"}}><img src=\"favicon.ico\" style={{width: \"35px\", height:\"35px\" }} /></Button>\n            &nbsp;&nbsp;Insurance Bazaar\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {itemsList.map((item) => {\n            const {text, icon, onClick} = item\n            return (\n              <ListItem button key={text} onClick={onClick}>\n                {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                <ListItemText primary={text}/>\n              </ListItem>\n            )\n          })}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {typeof location.location.state === 'undefined' ? <RenderComponent/> : <RenderComponent locationData={location}/>}\n        {/* <div>\n          {\n            geoLocation.loaded ? JSON.stringify(geoLocation): \"Location data not available yet.\"\n          }\n        </div> */}\n        \n        \n        \n      </main>\n      \n    </div>\n  );\n}","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Form.js",["105","106","107"],"import React, {useEffect, useState} from 'react'\nimport RenderForm from './RenderForm';\nimport axios from 'axios'\nimport { useHistory } from \"react-router\";\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { CircularProgress } from '@material-ui/core';\nimport useGeoLocation from '../geolocation/useGeoLocation'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }));\n\n\n\nfunction Form({cardInfo, setOpenPopup}) {\n    const classes = useStyles();\n     const [loading, setLoading] = useState(false);\n    const [formFields, setFormFields] = useState()\n    const history = useHistory();\n    const geoLocation= useGeoLocation();\n\n    const onSubmit = (data) => {\n         setLoading(true)\n         handleToggle()\n         \n\n            const userLocation= geoLocation.loaded ? (geoLocation): \"Location data not available yet.\"\n            \n            console.log(userLocation)\n          \n        \n        \n\n        const finalData = {category: cardInfo.category, product: cardInfo.product, formData: data, userLocation:userLocation}\n        console.log(\"Final Data to be sent => \", finalData)\n        axios.post(\"http://localhost:9090/api/response\", finalData).then((response) => {\n            const quoteData={category: cardInfo.category,product: cardInfo.product, quoteData: response.data, userLocation:userLocation} \n            \n            //console.log(\"Quote => \", response.data)\n            redirectToPath(quoteData)\n            //history.push()\n        })\n       \n        setOpenPopup(false)\n        // setLoading(false)\n    }\n    function redirectToPath(quoteData) {\n        setLoading(true);\n        history.push(\"/quote\", {quoteData: JSON.stringify(quoteData)})\n        handleToggle()\n        }\n        \n\n    useEffect(() => {\n        axios.get(`http://localhost:9090/api/config/category/${cardInfo.category}/product/${cardInfo.product}`).then((response) => {\n            console.log(response.data)\n            setFormFields(response.data[0].fields)\n        })\n        \n    }, [])\n    const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n    console.log(\"BACKDROP\",open)\n    return(\n        <Backdrop  open={open} onClick={handleClose}>\n        <CircularProgress className={classes.backdrop} color=\"inherit\" />\n      </Backdrop>\n    )\n  };\n\n    return (\n        <div>\n            \n             {/* css={override} */}\n\n            {typeof formFields !== 'undefined' && \n                <RenderForm formFields={formFields} onSubmit={onSubmit}/>\n            }\n            \n            \n        </div>\n    )\n    \n}\n\nexport default Form\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\RenderForm.js",["108","109","110","111","112","113","114","115","116","117"],"import React, {useState} from 'react'\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Container, TextField, Typography } from '@material-ui/core';\nimport '../RenderForm.css'\n//import  DatePicker  from \"./DatePicker\";\nimport Controls from \"./formControls/Controls/Controls\";\nimport { FormControl, FormLabel, RadioGroup , FormControlLabel, Radio, Switch } from '@material-ui/core';\nimport DateFnsUtils from '@date-io/date-fns';\nimport 'date-fns';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n      marginTop: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n    },\n  }));\n\nfunction RenderForm({formFields, onSubmit}) {\n\n    const classes = useStyles();\n    const { register, handleSubmit, errors } = useForm()\n    const [loading, setLoading] = useState(false);\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n    const renderFields = (fields) => {\n\n        return fields.map(field => {\n            const { name, type, label, placeholder } = field\n\n            switch(type){\n\n                case 'text':\n                case 'email':\n                case 'tel':\n                case 'number':\n                //case 'date':\n                    return (\n                        <div key={name}>\n                            <TextField id={name} name={name} type={type} label={label} placeholder={placeholder} inputRef={register}\n                                variant=\"outlined\" margin=\"normal\" required fullWidth/>\n                                {/* <Controls.Input id={name} name={name} type={type} label={label} placeholder={placeholder}    inputRef={register}/> */}\n                        </div>\n                    )\n                case 'date':\n                    return (\n                        <div key={name}>\n                            {/* <Controls.Input id={name} name={name} type={type} label={label} placeholder={placeholder}    inputRef={register}/> */}\n                            {/* <Controls.DatePicker id={name} name={name} type={type} label={label} inputRef={register} /> */}\n\n                            <TextField className=\"date\" id={name} name={name} type={type} label={label} placeholder={placeholder} inputRef={register}\n                                variant=\"outlined\" margin=\"normal\"  InputLabelProps={{ shrink: true }} required fullWidth/>\n                                \n                        </div>\n                    )\n                case 'select':\n                    return (\n                        <div key={name}>\n                            <select id={name} name={name} ref={register}>\n                                <option value=\"\">Select Destination..</option>\n                                <option value=\"India\">India</option>\n                                <option value=\"England\">England</option>\n                                <option value=\"Australia\">Australia</option>\n                                <option value=\"USA\">USA</option>\n                            </select>  \n                            {/* <Controls.CountrySelect /> */}\n                            {/* <Controls.Asynchronous name={name} ref={register}/> */}\n                        </div> \n                    )\n                    case 'radio':\n                        return (\n                            <div key={name}>\n                                <FormControl component=\"fieldset\" required>\n                                    <FormLabel component=\"legend\">{label}</FormLabel>\n                                    <RadioGroup row name={name}>\n                                        {field.items.map((item) => {\n                                            return <FormControlLabel key={item.value} value={item.value} control={<Radio inputRef={register}/>} label={item.label} labelPlacement=\"end\"/>\n                                        })}\n                                    </RadioGroup>\n                                </FormControl>\n                            </div>\n                        )\n                default:\n                    return (\n                        <div key={name}>\n                            <span style={{color: 'red'}}>Invalid Field</span>\n                        </div>\n                    )\n            }\n        })\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\" className=\"renderForm\">\n            <div className={classes.paper}>\n                <Typography variant=\"subtitle1\">\n                    Provide the following details\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                    {renderFields(formFields)}\n                    <FormControlLabel \n                        control={<Switch name=\"sendUpdates\" inputRef={register}/>}\n                        \n                        label=\"Get updates on Email\"\n                        \n                    />\n                    <Button className=\"button\" type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit} style={{borderRadius: \"15px\"}} loading={loading} >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\nexport default RenderForm\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\DatePicker.js",["118","119","120","121","122","123","124"],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Controls.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Input.js",["125","126","127","128"],"import React from 'react'\r\nimport { TextField } from '@material-ui/core';\r\n\r\nfunction Input({ name, label, placeholder, id, type, ...rest}, inputRef ) {\r\n\r\n    //const { name, label, placeholder, id, type }, inputRef = props;\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            id={name} name={name} type={type} label={label} placeholder={placeholder}\r\n            label={label}\r\n            name={name}\r\n            //value={value}\r\n            inputRef={inputRef}\r\n            type={type}\r\n            margin=\"normal\" required fullWidth\r\n        />\r\n        \r\n    )\r\n    \r\n}\r\nconst forwardedInput = React.forwardRef(Input)\r\nexport default Input","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Checkbox.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\DatePicker.js",["129","130","131","132","133"],"import DateFnsUtils from '@date-io/date-fns';\r\nimport 'date-fns';\r\nimport React from 'react';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n//import MomentUtils from '@date-io/moment';\r\nexport default function DatePicker(props) {\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date('2014-08-18T21:11:54'));\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n    const { name, label, placeholder, id, type } = props;\r\n    return (<MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <KeyboardDatePicker\r\n          disableToolbar\r\n          variant=\"inline\"\r\n          format=\"MM/dd/yyyy\"\r\n          margin=\"normal\"\r\n          id=\"date-picker-inline\"\r\n          label={label}\r\n          \r\n           value={selectedDate}\r\n           onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        />\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\ProductCarousel.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\CountrySelect.js",[],"C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\formControls\\Controls\\Asynchronous.js",["134","135","136","137"],"// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\nimport fetch from 'cross-fetch';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function Asynchronous(props) {\r\n  const { name, label, placeholder, id, type } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const loading = open && options.length === 0;\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!loading) {\r\n      return undefined;\r\n    }\r\n\r\n    (async () => {\r\n      const response = await fetch('https://country.register.gov.uk/records.json?page-size=5000');\r\n      await sleep(1e3); // For demo purposes.\r\n      const countries = await response.json();\r\n\r\n      if (active) {\r\n        setOptions(Object.keys(countries).map((key) => countries[key].item[0]));\r\n      }\r\n    })();\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [loading]);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setOptions([]);\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"asynchronous-demo\"\r\n      style={{ width: 300 }}\r\n      open={open}\r\n      onOpen={() => {\r\n        setOpen(true);\r\n      }}\r\n      onClose={() => {\r\n        setOpen(false);\r\n      }}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label={name}\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\geolocation\\useGeoLocation.js",["138"],"import React, { useState, useEffect } from \"react\";\r\n\r\n\r\nconst useGeoLocation=()=>{\r\n    const [location, setLocation] =useState({\r\n        loaded:false,\r\n        coordinates:{ lat:\"\", lng:\"\"}\r\n    })\r\n\r\n    const onSuccess=(location)=>{\r\n        setLocation({\r\n            loaded:true,\r\n            userAllowed:true,\r\n            coordinates:{ \r\n                lat: location.coords.latitude, \r\n                lng: location.coords.longitude\r\n            }\r\n        })\r\n    }\r\n    const onError=(error)=>{\r\n        setLocation({\r\n            loaded: true,\r\n            userAllowed:false,\r\n            error,\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        if(!(\"geolocation\" in navigator))\r\n        { \r\n            onError({ \r\n                code:0,\r\n                message:\"Geolocation not supported\",\r\n            })\r\n            \r\n            \r\n        }\r\n        navigator.geolocation.getCurrentPosition(onSuccess,onError)\r\n    },[])\r\n    return location\r\n}\r\nexport default useGeoLocation\r\n\r\n\r\n","C:\\Users\\Admin\\Documents\\Final Project\\Demo\\Dynamic_Form_React-master\\config-based-hooks-form-v2\\src\\components\\Suggestion.js",["139","140","141","142","143","144","145","146","147","148","149"],"\r\nimport { Button, Card, CardActionArea, CardActions, CardContent, CardMedia, Dialog, DialogContent, DialogTitle, Divider, Grid, Typography } from '@material-ui/core'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { makeStyles } from '@material-ui/core';\r\nimport axios from 'axios'\r\nimport loader from '../video/video.mp4'\r\nfunction Suggestion() {\r\n    return (\r\n        <div>\r\n            <><video id=\"background-video\" style={{position:\"absolute\", width:\"100%\", left:\"50%\", top:\"50%\",height:\"100%\", objectFit:\"cover\", transform:\"translate(-50%,-50%)\", zIndex:\"-1\"}}loop autoPlay muted>\r\n<source src={loader} type=\"video/mp4\" />\r\n<source src={loader} type=\"video/ogg\" />\r\nYour browser does not support the video tag. \r\n\r\n </video><h1 style={{color:\"rgba(0,0,0,0.7)\", display:\"flex\", justifyContent:\"center\", textAlign:\"center\"}}></h1> </>\r\n        \r\n        \r\n        <div className=\"bigcard\" \r\n    style={{\r\n      //backgroundColor: 'transparent',\r\n      boxShadow: '20px 20px 50px rgba(0,0,0,0.5)',\r\n      borderRadius:\"10px\",\r\n      padding: \"20px\",\r\n      background: 'rgba(0,0,0,0.3)',\r\n      borderTop:'3px solid rgba(255,255,255,0.1)',\r\n      borderLeft:'3px solid rgba(255,255,255,0.1)',\r\n      backdropFilter:'blur(5px)'\r\n    }} \r\n  overlayStyle={{backgroundColor: 'transparent'}}><h1 style={{color:\"white\"}}> <span style={{color:\"rgba(255,255,255,0.7)\"}}>Hello, checkout some of our most popular Insurances</span></h1>{RenderCard()}</div>\r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n    )\r\n}\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper : {\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    root: {\r\n        flexGrow: 1\r\n    }\r\n}))\r\n\r\nfunction RenderCard() {\r\n\r\n    const [cardConfig, setCardConfig] = useState()\r\n\r\n    const [cardInfo, setCardInfo] = useState({\r\n        category: \"\",\r\n        product: \"\"\r\n    })\r\n\r\n    const [open, setOpen] = useState(false)\r\n\r\n    \r\n\r\n    const handleClickOpen = (card) => {\r\n        console.log(card.category, card.product)\r\n        setCardInfo({\r\n            category: card.category,\r\n            product: card.product\r\n        })\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:9090/api/category/request/count\").then((response) => {\r\n            \r\n            response.data.sort(GetSortOrder(\"count\"));\r\n            const temp=response.data.slice(0,3)\r\n              console.log(temp)\r\n            setCardConfig(temp)\r\n        })\r\n        \r\n    }, [])\r\n\r\n    const classes = useStyles()\r\n    function GetSortOrder(prop) {    \r\n        return function(a, b) {    \r\n            if (a[prop] > b[prop]) {    \r\n                return -1;    \r\n            } else if (a[prop] < b[prop]) {    \r\n                return 1;    \r\n            }    \r\n            return 0;    \r\n        }    \r\n    } \r\n    const renderCard = (card, index) => {\r\n        return (\r\n            <Grid item xs={12} sm={4}>\r\n                <Card className=\"card\" key={index} style={{\r\n    borderRadius: \"15px\",\r\n    maxWidth: 345 , margin: 'auto', marginTop: 20}}>\r\n                    <CardActionArea onClick={() => handleClickOpen(card)}>\r\n                        {/* <CardMedia component=\"img\" image={card.image} height=\"140\" title={card.category}/> */}\r\n                        <CardContent className=\"content\">\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                <b style={{color:\"black\"}}>{card.category}</b>\r\n                            </Typography>\r\n                            <Typography gutterBottom variant=\"h6\" component=\"h4\">\r\n                                {card.product}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea>\r\n                    \r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={`cardRender ${classes.root1}`}>\r\n            <Grid container spacing={3}>\r\n                {typeof cardConfig !== 'undefined' && cardConfig.map(renderCard)}\r\n            </Grid>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Suggestion\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":40,"nodeType":"156","messageId":"157","endLine":1,"endColumn":51},{"ruleId":"154","severity":1,"message":"158","line":1,"column":113,"nodeType":"156","messageId":"157","endLine":1,"endColumn":120},{"ruleId":"154","severity":1,"message":"159","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"154","severity":1,"message":"160","line":2,"column":16,"nodeType":"156","messageId":"157","endLine":2,"endColumn":24},{"ruleId":"154","severity":1,"message":"161","line":13,"column":8,"nodeType":"156","messageId":"157","endLine":13,"endColumn":15},{"ruleId":"154","severity":1,"message":"162","line":21,"column":8,"nodeType":"156","messageId":"157","endLine":21,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":138,"column":107,"nodeType":"165","endLine":138,"endColumn":131},{"ruleId":"166","severity":1,"message":"167","line":185,"column":9,"nodeType":"168","endLine":185,"endColumn":124},{"ruleId":"154","severity":1,"message":"169","line":19,"column":8,"nodeType":"156","messageId":"157","endLine":19,"endColumn":22},{"ruleId":"154","severity":1,"message":"170","line":29,"column":8,"nodeType":"156","messageId":"157","endLine":29,"endColumn":24},{"ruleId":"154","severity":1,"message":"171","line":30,"column":8,"nodeType":"156","messageId":"157","endLine":30,"endColumn":30},{"ruleId":"154","severity":1,"message":"172","line":105,"column":10,"nodeType":"156","messageId":"157","endLine":105,"endColumn":21},{"ruleId":"173","severity":1,"message":"174","line":129,"column":7,"nodeType":"175","messageId":"176","endLine":129,"endColumn":11},{"ruleId":"173","severity":1,"message":"177","line":130,"column":7,"nodeType":"175","messageId":"176","endLine":130,"endColumn":11},{"ruleId":"154","severity":1,"message":"178","line":148,"column":9,"nodeType":"156","messageId":"157","endLine":148,"endColumn":21},{"ruleId":"154","severity":1,"message":"179","line":153,"column":9,"nodeType":"156","messageId":"157","endLine":153,"endColumn":22},{"ruleId":"154","severity":1,"message":"180","line":154,"column":10,"nodeType":"156","messageId":"157","endLine":154,"endColumn":15},{"ruleId":"154","severity":1,"message":"181","line":154,"column":17,"nodeType":"156","messageId":"157","endLine":154,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":180,"column":84,"nodeType":"168","endLine":180,"endColumn":149},{"ruleId":"154","severity":1,"message":"182","line":6,"column":8,"nodeType":"156","messageId":"157","endLine":6,"endColumn":18},{"ruleId":"154","severity":1,"message":"183","line":23,"column":13,"nodeType":"156","messageId":"157","endLine":23,"endColumn":20},{"ruleId":"184","severity":1,"message":"185","line":66,"column":8,"nodeType":"186","endLine":66,"endColumn":10,"suggestions":"187"},{"ruleId":"154","severity":1,"message":"188","line":7,"column":8,"nodeType":"156","messageId":"157","endLine":7,"endColumn":16},{"ruleId":"154","severity":1,"message":"189","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":20},{"ruleId":"154","severity":1,"message":"190","line":13,"column":3,"nodeType":"156","messageId":"157","endLine":13,"endColumn":26},{"ruleId":"154","severity":1,"message":"191","line":14,"column":3,"nodeType":"156","messageId":"157","endLine":14,"endColumn":21},{"ruleId":"154","severity":1,"message":"192","line":15,"column":3,"nodeType":"156","messageId":"157","endLine":15,"endColumn":21},{"ruleId":"154","severity":1,"message":"193","line":38,"column":37,"nodeType":"156","messageId":"157","endLine":38,"endColumn":43},{"ruleId":"154","severity":1,"message":"194","line":39,"column":21,"nodeType":"156","messageId":"157","endLine":39,"endColumn":31},{"ruleId":"154","severity":1,"message":"195","line":40,"column":12,"nodeType":"156","messageId":"157","endLine":40,"endColumn":24},{"ruleId":"154","severity":1,"message":"196","line":42,"column":9,"nodeType":"156","messageId":"157","endLine":42,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":126,"column":108,"nodeType":"165","endLine":126,"endColumn":134},{"ruleId":"154","severity":1,"message":"190","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":33},{"ruleId":"154","severity":1,"message":"192","line":2,"column":35,"nodeType":"156","messageId":"157","endLine":2,"endColumn":53},{"ruleId":"154","severity":1,"message":"197","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":16},{"ruleId":"154","severity":1,"message":"198","line":4,"column":18,"nodeType":"156","messageId":"157","endLine":4,"endColumn":27},{"ruleId":"154","severity":1,"message":"199","line":4,"column":40,"nodeType":"156","messageId":"157","endLine":4,"endColumn":50},{"ruleId":"154","severity":1,"message":"180","line":7,"column":26,"nodeType":"156","messageId":"157","endLine":7,"endColumn":31},{"ruleId":"154","severity":1,"message":"200","line":7,"column":33,"nodeType":"156","messageId":"157","endLine":7,"endColumn":41},{"ruleId":"163","severity":1,"message":"164","line":11,"column":13,"nodeType":"165","endLine":11,"endColumn":26},{"ruleId":"163","severity":1,"message":"164","line":12,"column":13,"nodeType":"165","endLine":12,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":15,"column":13,"nodeType":"165","endLine":15,"endColumn":24},{"ruleId":"154","severity":1,"message":"201","line":22,"column":7,"nodeType":"156","messageId":"157","endLine":22,"endColumn":21},{"ruleId":"154","severity":1,"message":"191","line":6,"column":3,"nodeType":"156","messageId":"157","endLine":6,"endColumn":21},{"ruleId":"154","severity":1,"message":"202","line":17,"column":13,"nodeType":"156","messageId":"157","endLine":17,"endColumn":17},{"ruleId":"154","severity":1,"message":"203","line":17,"column":26,"nodeType":"156","messageId":"157","endLine":17,"endColumn":37},{"ruleId":"154","severity":1,"message":"204","line":17,"column":39,"nodeType":"156","messageId":"157","endLine":17,"endColumn":41},{"ruleId":"154","severity":1,"message":"205","line":17,"column":43,"nodeType":"156","messageId":"157","endLine":17,"endColumn":47},{"ruleId":"154","severity":1,"message":"206","line":15,"column":17,"nodeType":"156","messageId":"157","endLine":15,"endColumn":22},{"ruleId":"154","severity":1,"message":"203","line":15,"column":24,"nodeType":"156","messageId":"157","endLine":15,"endColumn":35},{"ruleId":"154","severity":1,"message":"204","line":15,"column":37,"nodeType":"156","messageId":"157","endLine":15,"endColumn":39},{"ruleId":"154","severity":1,"message":"205","line":15,"column":41,"nodeType":"156","messageId":"157","endLine":15,"endColumn":45},{"ruleId":"154","severity":1,"message":"207","line":1,"column":8,"nodeType":"156","messageId":"157","endLine":1,"endColumn":13},{"ruleId":"154","severity":1,"message":"197","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":2,"column":40,"nodeType":"156","messageId":"157","endLine":2,"endColumn":51},{"ruleId":"154","severity":1,"message":"208","line":2,"column":66,"nodeType":"156","messageId":"157","endLine":2,"endColumn":75},{"ruleId":"154","severity":1,"message":"209","line":2,"column":77,"nodeType":"156","messageId":"157","endLine":2,"endColumn":83},{"ruleId":"154","severity":1,"message":"210","line":2,"column":85,"nodeType":"156","messageId":"157","endLine":2,"endColumn":98},{"ruleId":"154","severity":1,"message":"211","line":2,"column":100,"nodeType":"156","messageId":"157","endLine":2,"endColumn":111},{"ruleId":"154","severity":1,"message":"158","line":2,"column":113,"nodeType":"156","messageId":"157","endLine":2,"endColumn":120},{"ruleId":"212","severity":1,"message":"213","line":15,"column":10,"nodeType":"168","endLine":15,"endColumn":109},{"ruleId":"154","severity":1,"message":"214","line":51,"column":12,"nodeType":"156","messageId":"157","endLine":51,"endColumn":20},{"ruleId":"154","severity":1,"message":"215","line":56,"column":12,"nodeType":"156","messageId":"157","endLine":56,"endColumn":16},{"ruleId":"154","severity":1,"message":"216","line":69,"column":11,"nodeType":"156","messageId":"157","endLine":69,"endColumn":22},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'loader' is defined but never used.","'useState' is defined but never used.","'Geocode' is defined but never used.","'SuccessfulPayment' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AssessmentIcon' is defined but never used.","'BottomNavigation' is defined but never used.","'BottomNavigationAction' is defined but never used.","'geoLocation' is assigned a value but never used.","no-dupe-keys","Duplicate key 'text'.","ObjectExpression","unexpected","Duplicate key 'icon'.","'locationData' is assigned a value but never used.","'classesFooter' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'ClipLoader' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cardInfo.category' and 'cardInfo.product'. Either include them or remove the dependency array.","ArrayExpression",["219"],"'Controls' is defined but never used.","'DateFnsUtils' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'errors' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'onChange' is assigned a value but never used.","'forwardedInput' is assigned a value but never used.","'name' is assigned a value but never used.","'placeholder' is assigned a value but never used.","'id' is assigned a value but never used.","'type' is assigned a value but never used.","'label' is assigned a value but never used.","'React' is defined but never used.","'CardMedia' is defined but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'DialogTitle' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'cardInfo' is assigned a value but never used.","'open' is assigned a value but never used.","'handleClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},"Update the dependencies array to be: [cardInfo.category, cardInfo.product]",{"range":"222","text":"223"},[2180,2182],"[cardInfo.category, cardInfo.product]"]